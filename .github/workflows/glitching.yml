# This is a basic workflow to help you get started with Actions

name: Glitching

# Controls when the action will run. 
on:
  # Triggers the workflow on all push or pull request events
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    - cron: "20 0 * * *"

# added using https://github.com/step-security/secure-repo
permissions:
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_and_glitch:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    env:
      COMPILER: ${{ matrix.compiler }}
      TAR_CMD: tar_nosuid
      GHA_OS: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04]
        compiler: ['gcc', 'clang', 'gcc-9', 'gcc-10', 'clang-9', 'clang-10']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: apt_get_update
        run: scripts/ft-apt-get-update.sh

      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m")"
        shell: bash

      - name: Cache ffmpeg
        uses: actions/cache@v3
        with:
          path: dist/ffmpeg.tar.xz
          key: ${{ steps.get-date.outputs.date }}

      - name: Workaround for tar not being able to access /var/cache/apt/archives
        run: |
          sudo cp "$(command -v tar)" "$(command -v tar)"_nosuid
          sudo chmod u+s "$(command -v tar)"

      # Cache the apt-get packages
      - name: Cache apt-get packages
        uses: actions/cache@v3
        with:
          path: /var/cache/apt/archives
          key: glitching-${{ matrix.os }}-${{ matrix.compiler }}-apt-get-${{ hashFiles('**/scripts/build/install_depends.sh') }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: before_install
        run: sh -x scripts/ft-before_install.sh

      - name: install_depends
        run: sh -x scripts/build/install_depends.sh

      - name: script
        run: sh -x scripts/do-test.sh glitching
